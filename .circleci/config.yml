version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...

jobs:
  hello-world: # Delete this job when you get started
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Say Hello
          command: |
            echo "Hello World"
  
#  build-frontend:
  build-compile-front-end:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: build and compile front end
          command: |
            ls -ltr
            cd frontend
            npm i
            npm run build

            
 # build-backend           
  build-compile-back-end:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: build and compile back end
          command: |
            cd backend
            ls -ltr
            npm i
            npm run build

# test-frontend:
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: test frontend
          command: |
            ls -ltr
            cd frontend
            npm install jest
            npm run test

      - run:
          name: Install JUnit coverage reporter
          command: yarn add --dev jest-junit
      - run:
          name: Run tests with JUnit as reporter
          command: |
            mkdir reports
            mkdir reports/junit
            ls -ltr
            jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: ./reports/junit/js-test-results-frontend.xml
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit      

# test-backend:
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: test backend
          command: |
            ls -ltr
            cd backend
            npm install jest
            npm run test

      - run:
          name: Install JUnit coverage reporter
          command: yarn add --dev jest-junit
      - run:
          name: Run tests with JUnit as reporter
          command: |
            ls -ltr
            jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: ./reports/junit/js-test-results-backend.xml
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit      
      


#  scan-frontend:

#  scan-backend:

#  deploy-infrastructure:

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:  

#  smoke-test:

#  cloudfront-update:

workflows:
  default:
    jobs:
      - hello-world
      - build-compile-front-end
      - build-compile-back-end
      - test-frontend:
          requires:
            - build-compile-front-end
            - build-compile-back-end
      - test-backend:
          requires:
            - build-compile-front-end
            - build-compile-back-end  

